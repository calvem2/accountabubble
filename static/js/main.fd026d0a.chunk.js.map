{"version":3,"sources":["logo.svg","ProgressBar.js","Bubble.js","WeekDay.js","App.js","reportWebVitals.js","index.js"],"names":["ProgressBar","Component","completed","this","props","tasks","filter","task","value","length","max","WeekDay","dailyTasks","i","push","class","name","day","App","assignee","days","weekdays","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAAe,I,iCCmBAA,GChBMC,Y,uKDGb,IAAIC,EAAYC,KAAKC,MAAMC,MAAMC,QAAO,SAAAC,GACpC,OAAOA,EAAKL,aAGhB,OACI,8BACI,0BAAUM,MAAON,EAAUO,OAAQC,IAAKP,KAAKC,MAAMC,MAAMI,e,GAT/CR,cEiBXU,E,uKAbP,IADA,IAAIC,EAAa,GACRC,EAAI,EAAGA,EAAIV,KAAKC,MAAMC,MAAMI,OAAQI,IACzCD,EAAWE,KAAK,qBAAKC,MAAM,QAAX,SAAoBZ,KAAKC,MAAMC,MAAMQ,GAAGG,QAE5D,OACI,sBAAKD,MAAM,YAAX,UACI,6BAAKZ,KAAKC,MAAMa,MAEfL,S,GAXKX,aC6BPiB,MA1Bf,WAOE,IANA,IAAIb,EAAQ,CAAC,CAACW,KAAK,OAAQG,SAAS,MAAOF,IAAI,SAAUf,WAAU,GACvD,CAACc,KAAK,QAASG,SAAS,SAAUF,IAAI,SAAUf,WAAU,GAC1D,CAACc,KAAK,SAAUG,SAAS,QAASF,IAAI,SAAUf,WAAU,GAC1D,CAACc,KAAK,WAAYG,SAAS,MAAOF,IAAI,SAAUf,WAAU,IAClEkB,EAAO,GACPC,EAAW,CAAC,SAAU,UAAW,YAAa,WAAY,SAAU,WAAY,UANvE,WAOJR,GACPO,EAAKN,KACH,cAAC,EAAD,CAASG,IAAKI,EAASR,GAAIR,MAAOA,EAAMC,QAAO,SAAAC,GAC7C,OAAOA,EAAKU,MAAQI,EAASR,UAH1BA,EAAI,EAAGA,EAAIQ,EAASZ,OAAQI,IAAM,EAAlCA,GAOT,OACE,sBAAKS,UAAU,MAAf,UAEC,cAAC,EAAD,CAAajB,MAAOA,IAEnB,qBAAKU,MAAM,OAAX,SACGK,QCdMG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1Bb,M","file":"static/js/main.fd026d0a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\n\n\nclass ProgressBar extends Component {\n\n    render() {\n        let completed = this.props.tasks.filter(task => {\n            return task.completed;\n        });\n\n        return (\n            <div>\n                <progress value={completed.length} max={this.props.tasks.length}>\n                </progress>\n            </div>\n        );\n    }\n}\n\nexport default ProgressBar;","import React, { Component } from 'react';\n\n\nclass Bubble extends Component {\n\n\n    render() {\n        return (\n            <div>hello</div>\n        );\n    }\n}\n\nexport default Bubble;","import React, { Component } from 'react';\n\n\nclass WeekDay extends Component {\n\n    render() {\n        let dailyTasks = [];\n        for (let i = 0; i < this.props.tasks.length; i++) {\n            dailyTasks.push(<div class=\"tasks\">{this.props.tasks[i].name}</div>);\n        }\n        return (\n            <div class=\"week_days\">\n                <h3>{this.props.day}</h3>\n                {/* Add the names here. Sort tasks based on name. */}\n                {dailyTasks}\n            </div>\n        );\n    }\n}\n\nexport default WeekDay;","import logo from './logo.svg';\nimport './App.css';\nimport Bubble from \"./Bubble\";\nimport ProgressBar from \"./ProgressBar\";\nimport WeekDay from \"./WeekDay\";\n\nfunction App() {\n  let tasks = [{name:\"yoga\", assignee:\"ash\", day:\"Monday\", completed:false}, \n              {name:\"legos\", assignee:\"claire\", day:\"Sunday\", completed:true},\n              {name:\"plants\", assignee:\"megan\", day:\"Monday\", completed:true},\n              {name:\"make pun\", assignee:\"ash\", day:\"Monday\", completed:false}];\n  let days = [];\n  let weekdays = [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"];\n  for (let i = 0; i < weekdays.length; i++) {\n    days.push(\n      <WeekDay day={weekdays[i]} tasks={tasks.filter(task => {\n        return task.day === weekdays[i];\n      })}/>\n    )\n  }\n  return (\n    <div className=\"App\">\n      \n     <ProgressBar tasks={tasks}/>\n      {/* Week days */}\n      <div class=\"flex\"> \n        {days}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Bubble from \"./Bubble\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// ReactDOM.render(<Bubble></Bubble>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}