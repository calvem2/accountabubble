{"version":3,"sources":["ProgressBar.js","Task.js","WeekDay.js","logo.png","App.js","reportWebVitals.js","Bubble.js","index.js"],"names":["ProgressBar","value","this","props","completed","max","total","Component","cx","require","Task","onLabelClick","event","setState","prevState","clicked","onChange","state","target","htmlFor","weekdays","checkable","indexOf","currDay","day","classNames","textClassNames","checkbox","tag","name","assignee","className","checked","type","id","onClick","WeekDay","assignees","Set","tasks","map","task","splice","profileName","length","unshift","dailyTasks","i","push","class","filter","App","taskInfo","split","newTasks","currTask","document","title","days","now","Date","getDay","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.767f4422.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass ProgressBar extends Component {\n    // props\n    // tasks (list of tasks)\n\n    // # completed\n    // total #\n\n    render() {\n        // let completed = this.props.tasks.filter(task => {\n        //     return task.completed;\n        // });\n\n        return (\n            <div>\n                <progress value={this.props.completed} max={this.props.total}>\n                </progress>\n            </div>\n        );\n    }\n}\n\nexport default ProgressBar;","import React, { Component } from 'react';\nlet cx = require('classnames');\n\nclass Task extends Component {\n    // props\n    // name\n    // day\n    // curDay\n    // checkbox (true/false)\n    // completed (true, false)\n    // checked\n    // onChange\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: this.props.completed\n        };\n    }\n\n    onLabelClick = (event) => {\n        this.setState((prevState) => ({\n            clicked: !prevState.clicked\n        }));\n        this.props.onChange(this.state.clicked, event.target.htmlFor);\n    };\n\n    render() {\n        let weekdays = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n        let checkable = weekdays.indexOf(this.props.currDay) <= weekdays.indexOf(this.props.day);\n        let classNames = cx({\n            'clicked': this.state.clicked\n        });\n        let textClassNames = cx({\n            'task-text': true,\n            'clicked': this.state.clicked || !checkable\n        });\n\n\n        if (this.props.checkbox) {\n            let tag = this.props.name + \";\" + this.props.assignee + \";\" + this.props.day;\n            if (!checkable) {\n                return (\n                    <div className=\"tasks\">\n                        <div className=\"round\">\n                            <input type=\"checkbox\" checked={!checkable} id={tag}/>\n                            <label\n                                className={classNames}\n                                htmlFor={tag}\n                            >\n                            </label>\n                        </div>\n                        <div className={textClassNames}>\n                            {this.props.name}\n                        </div>\n                    </div>\n                );\n            } else {\n                return (\n                    <div className=\"tasks\">\n                        <div className=\"round\">\n                            <input checked={this.state.clicked} type=\"checkbox\" id={tag}/>\n                            <label\n                                className={classNames}\n                                htmlFor={tag}\n                                onClick={this.onLabelClick}\n                            >\n                            </label>\n                        </div>\n                        <div className={textClassNames}>\n                            {this.props.name}\n                        </div>\n                    </div>\n                );\n            }\n        } else {\n            return (\n                <div className=\"tasks\">\n                    <div className={textClassNames}>\n                        {this.props.name}\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n\nexport default Task;","import React, { Component } from 'react';\nimport Task from \"./Task\";\nlet cx = require('classnames');\n\nclass WeekDay extends Component {\n\n    render() {\n        let weekdays = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n\n        // Filter tasks based on assignees\n        let assignees = [...new Set(this.props.tasks.map(task => task.assignee))];\n        assignees.splice(assignees.indexOf(this.props.profileName), 1);\n        if (assignees.length > 0) {\n            assignees.unshift(this.props.profileName);\n        }\n\n        let dailyTasks = [];\n        for (let i = 0; i < assignees.length; i++) {\n            dailyTasks.push(\n                <div class=\"task_group\">\n                    <div class=\"assignee\">{\n                        assignees[i] === this.props.profileName ? \"your tasks\" : assignees[i]\n                    }</div>\n                    {this.props.tasks.filter(task => {\n                        return task.assignee === assignees[i];\n                    }).map(task => {\n                        if (assignees[i] === this.props.profileName) {\n                            return <Task onChange={this.props.onChange} name={task.name} day={task.day} assignee={task.assignee} currDay={this.props.currDay} completed={task.completed} checkbox={true}/>\n                            // return(<div class=\"tasks\">\n                            //             <div class=\"round\">\n                            //                 <input type=\"checkbox\" id={task.name + task.assignee + task.day} checked=\"checked\"/>\n                            //                 <label for={task.name + task.assignee + task.day}></label>\n                            //             </div>\n                            //             <div class=\"task-text\">\n                            //                 {task.name}\n                            //             </div>\n                            //         </div>);\n                        // } else if (assignees[i] === this.props.profileName) {\n                        //     return <Task onChange={this.props.onChange} name={task.name} day={task.day} assignee={task.assignee} currDay={this.props.currDay} completed={task.completed} checkbox={true}/>\n                            // return(<div class=\"tasks\">\n                            //             <div class=\"round\">\n                            //                 <input type=\"checkbox\" id={task.name + task.assignee + task.day}/>\n                            //                 <label for={task.name + task.assignee + task.day}></label>\n                            //             </div>\n                            //             <div class=\"task-text\">\n                            //                 {task.name}\n                            //             </div>\n                            //         </div>);\n                        } else {\n                            return <Task onChange={this.props.onChange} name={task.name} day={task.day} assignee={task.assignee} currDay={this.props.currDay} completed={task.completed} checkbox={false}/>\n                            // return(<div class=\"tasks\">\n                            //             {task.name}\n                            //       </div>);\n                        }})}\n                </div>\n            );\n        }\n        let classNames = cx({\n            'week-days': true,\n            'selected-day': weekdays.indexOf(this.props.currDay) === weekdays.indexOf(this.props.day)\n        });\n\n        return (\n            <div className={classNames}>\n                <h3>{this.props.day}</h3>\n                {dailyTasks}\n                <div className=\"add-task\">+ add task</div>\n            </div>\n        );\n    }\n}\n\nexport default WeekDay;","export default __webpack_public_path__ + \"static/media/logo.983c4258.png\";","import './App.css';\nimport React, { Component } from 'react';\nimport ProgressBar from \"./ProgressBar\";\nimport WeekDay from \"./WeekDay\";\nimport logo from \"./logo.png\";\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            tasks: [{name:\"yoga\", assignee:\"ash\", day:\"monday\", completed:false},\n                {name:\"legos\", assignee:\"claire\", day:\"sunday\", completed:true},\n                {name:\"plants\", assignee:\"megan\", day:\"monday\", completed:true},\n                {name:\"make pun\", assignee:\"ash\", day:\"monday\", completed:false},\n                {name:\"make pun\", assignee:\"ash\", day:\"saturday\", completed:false},\n                {name:\"british accent\", assignee:\"claire\", day:\"saturday\", completed:true},\n                {name:\"roast claire\", assignee:\"megan\", day:\"saturday\", completed:true},\n                {name:\"write\", assignee:\"ash\", day:\"sunday\", completed:false},\n                {name:\"be vegetarian\", assignee:\"claire\", day:\"sunday\", completed:true},\n                {name:\"cry\", assignee:\"megan\", day:\"sunday\", completed:true},\n                {name:\"get tattoo\", assignee:\"ash\", day:\"monday\", completed:false},\n                {name:\"avoid adam\", assignee:\"ash\", day:\"saturday\", completed:true},\n                {name:\"have an attitude\", assignee:\"claire\", day:\"saturday\", completed:true},\n                {name:\"whale wars\", assignee:\"megan\", day:\"saturday\", completed:true}]\n        };\n    }\n\n    // Title of the web page tab\n    componentDidMount() {\n      document.title = \"accountabubble\";\n      this.setState({\n          completed: this.state.tasks.filter(task => {\n              return task.completed;\n          }).length,\n          total: this.state.tasks.length\n      });\n    }\n\n    onChange = (clicked, task) => {\n        let taskInfo = task.split(\";\");\n        let newTasks = [];\n        for (var i = 0; i < this.state.tasks.length; i++) {\n            let currTask = this.state.tasks[i];\n            if (currTask.name === taskInfo[0] && currTask.day === taskInfo[2] && currTask.assignee === taskInfo[1]) {\n                currTask.completed = !currTask.completed;\n            }\n            newTasks.push(currTask);\n        }\n        this.setState({\n            tasks: newTasks,\n            completed: !clicked ? this.state.completed + 1 : this.state.completed - 1\n        })\n    };\n\n\n\n    render() {\n        // Hard coded tasks\n        // let tasks =\n        let days = [];\n        // Weekdays\n        let weekdays = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\"];\n\n        // Get the current day\n        let now = new Date();\n        let currDay = now.getDay() === 0 ? weekdays[6] : weekdays[now.getDay() - 1];\n\n        for (let i = 0; i < weekdays.length; i++) {\n            days.push(\n              <WeekDay onChange={this.onChange} profileName={\"ash\"} currDay={currDay} day={weekdays[i]} tasks={this.state.tasks.filter(task => {\n                  return task.day === weekdays[i];\n              })}/>\n            )\n        }\n        return (\n            <div className=\"App\">\n              <img class=\"logo\" src={logo} alt=\"Accountabubble logo\"/>\n              {/* Add logo here */}\n              <h2>accountabubble</h2>\n              <ProgressBar completed={this.state.completed} total={this.state.total}/>\n              {/* Week days */}\n              <div class=\"flex\">\n                  {days}\n              </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\n\n\nclass Bubble extends Component {\n\n\n    render() {\n        return (\n            <div>hello</div>\n        );\n    }\n}\n\nexport default Bubble;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Bubble from \"./Bubble\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n// ReactDOM.render(<Bubble></Bubble>, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}